let CustomErrorHandler,JWtService;_84d‍.x([["default",()=>_84d‍.o]]);_84d‍.w("../Services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_84d‍.w("../Services/JwtService",[["default",["JWtService"],function(v){JWtService=v}]]);



const auth = async(req, res, next) => {

    let authHeader = req.headers.authorization;

    //console.log(authHeader);

    if(!authHeader){
        return next(CustomErrorHandler.unAuthorized());
    }

    const token = authHeader.split(' ')[1];

   try {
       const {_id, role} = await JWtService.verify(token);
       const user = {
           _id,
           role
       }

       req.user = user;
       next();
       

     
   }catch(err){
    return next(CustomErrorHandler.unAuthorized());
   }
}

_84d‍.d(auth);