let express,auth,loginController,registerController,userController,refreshController,productController,admin;_383‍.x([["default",()=>_383‍.o]]);_383‍.w("express",[["default",["express"],function(v){express=v}]]);_383‍.w("../middlewares/auth.js",[["default",["auth"],function(v){auth=v}]]);_383‍.w("../controllers/index.js",[["loginController",["loginController"],function(v){loginController=v}],["registerController",["registerController"],function(v){registerController=v}],["userController",["userController"],function(v){userController=v}],["refreshController",["refreshController"],function(v){refreshController=v}],["productController",["productController"],function(v){productController=v}]]);_383‍.w("../middlewares/admin.js",[["default",["admin"],function(v){admin=v}]]);

const router = express.Router();




router.post('/register', registerController.register);
router.post('/login', loginController.login);
router.get('/me', auth, userController.me);
router.post('/refresh', refreshController.refresh);
router.post('/logout',auth, loginController.logout);

router.post('/products', [auth,admin], productController.store);

router.put('/products/:id',[auth,admin], productController.update);
router.delete('/products/:id',[auth,admin], productController.destroyed);

router.get('/products', productController.index);










_383‍.d(router);